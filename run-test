#!/usr/bin/env bash
#
#------------------------------------------
# -s,--with-solr copy Solr from local copy
# -w,--with-main-web use the main branch of the web interface instead of a defined release
#------------------------------------------

SOLR_VERSION=8.11.1
QA_CATALOGUE_VERSION=0.8.0-SNAPSHOT

BASE_DIR=$(realpath .)

options=$(getopt -o sw --long with-solr,with-main-web -- "$@")

eval set -- "$options"

WITH_SOLR=0
WITH_MAIN_WEB=0
while true; do
    case "$1" in
    -s|--with-solr) WITH_SOLR=1 ;;
    -w|--with-main-web) WITH_MAIN_WEB=1 ;;
    --)
        shift
        break
        ;;
    esac
    shift
done

echo "params: WITH_SOLR=${WITH_SOLR}, WITH_MAIN_WEB=${WITH_MAIN_WEB}"
echo "Prepare data"
if [[ ! -d data ]]; then
  mkdir data
fi
cd data
if [[ ! -f natl_bibliography-2016-2021-marc.xml.gz ]]; then
  wget https://dati.lnb.lv/files/natl_bibliography-2016-2021-marc.zip
  unzip natl_bibliography-2016-2021-marc.zip
  rm natl_bibliography-2016-2021-marc.zip
  gzip natl_bibliography-2016-2021-marc.xml
fi
if [ ! -f solr-${SOLR_VERSION}.zip ]; then
  wget http://archive.apache.org/dist/lucene/solr/${SOLR_VERSION}/solr-${SOLR_VERSION}.zip
fi
cd ..

echo "Clean docker"
docker stop $(docker ps --filter name=metadata-qa-marc -q)
docker rm $(docker ps -a --filter name=metadata-qa-marc -q)
docker rmi $(docker images metadata-qa-marc -q)
docker builder prune -a -f

echo "Build docker image"
if [[ ! -d tmp ]]; then
  mkdir tmp
fi
cd tmp
git clone https://github.com/pkiraly/qa-catalogue.git
cd qa-catalogue
mvn clean package
DOCKER_BUILD_AGRS="--build-arg QA_CATALOGUE_VERSION=${QA_CATALOGUE_VERSION}"
if [ "${WITH_SOLR}" = 1 ]; then
  if [ ! -f solr-${SOLR_VERSION}.zip ]; then
    cp ${BASE_DIR}/data/solr-${SOLR_VERSION}.zip .
  fi
  DOCKER_BUILD_AGRS="${DOCKER_BUILD_AGRS} --build-arg SOLR_INSTALL_SOURCE=solr-${SOLR_VERSION}.zip"
fi
if [ "${WITH_MAIN_WEB}" = 1 ]; then
  DOCKER_BUILD_AGRS="${DOCKER_BUILD_AGRS} --build-arg QA_CATALOGUE_WEB_VERSION=main"
fi
echo "DOCKER_BUILD_AGRS=${DOCKER_BUILD_AGRS}"

docker compose -f docker-compose.yml build app $DOCKER_BUILD_AGRS

cd ../..
rm -rf tmp

echo "Start docker container"
docker run \
  -d \
  -v data:/opt/qa-catalogue/marc/input \
  -p 8983:8983 -p 90:80 \
  --name metadata-qa-marc \
  metadata-qa-marc

docker cp data/natl_bibliography-2016-2021-marc.xml.gz metadata-qa-marc:/opt/qa-catalogue/marc/input
docker cp data/pica-with-holdings-info-1K.dat metadata-qa-marc:/opt/qa-catalogue/marc/input

echo "run MARC analyses"
docker exec \
  -t -i metadata-qa-marc \
  ./qa-catalogue \
  --params "--marcVersion GENT --marcxml" \
  --mask '*marc.xml.gz' \
  --catalogue lnb \
  --name "" \
  --input-dir "input" \
  --web-config "/var/www/html/qa-catalogue/configuration.cnf" \
  all

mvn clean test \
  -DbaseUrl=http://localhost:90/qa-catalogue/ \
  -Dcatalogue-config=catalogues/lnb.json

echo "cleanup"
docker exec -t -i metadata-qa-marc /bin/bash -c 'rm -rf marc/_output/qa-catalogue/*'
docker exec -t -i metadata-qa-marc /bin/bash -c 'rm -rf marc/_reports/qa-catalogue/*'

echo "run PICA analyses"
docker exec \
  -t -i metadata-qa-marc \
  ./qa-catalogue \
  --schema PICA \
  --params "--schemaType PICA --marcFormat PICA_NORMALIZED --emptyLargeCollectors --groupBy "001@\$\0" --groupListFile marc/k10plus-libraries-by-unique-iln.txt --ignorableFields 001@,001E,001L,001U,001U,001X,001X,002V,003C,003G,003Z,008G,017N,020F,027D,031B,037I,039V,042@,046G,046T,101@,101E,101U,102D,201E,201U,202D,1...,2... --allowableRecords base64:MDAyQC4wICF+ICJeTCIgJiYgMDAyQC4wICF+ICJeLi5baWt0Tl0iICYmICgwMDJALjAgIX4gIl4udiIgfHwgMDIxQS5hPykK" \
  --mask 'pica-with-holdings-info-1K.dat' \
  --catalogue K10plus_pica_grouped \
  --input-dir "input" \
  --web-config "/var/www/html/qa-catalogue/configuration.cnf" \
  all

mvn clean test \
  -DbaseUrl=http://localhost:90/qa-catalogue/ \
  -Dcatalogue-config=catalogues/k10plus.json
